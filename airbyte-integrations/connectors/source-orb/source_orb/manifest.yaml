version: 0.51.2

type: DeclarativeSource

check:
  type: CheckStream
  stream_names:
    - subscriptions

definitions:
  selector:
    type: RecordSelector
    extractor:
      type: DpathExtractor
      field_path:
        - data
  paginator:
    type: DefaultPaginator
    page_token_option:
      type: RequestOption
      inject_into: request_parameter
      field_name: cursor
    page_size_option:
      type: RequestOption
      field_name: limit
      inject_into: request_parameter
    pagination_strategy:
      type: CursorPagination
      page_size: 50
      cursor_value: '{{ response.get("pagination_metadata", {}).get("next_cursor", {}) }}'
      stop_condition: >-
        {{ not response.get("pagination_metadata", {}).get("next_cursor", {}) }}
  requester:
    type: HttpRequester
    url_base: https://api.billwithorb.com/v1/
    http_method: GET
    request_headers: {}
    authenticator:
      type: BearerAuthenticator
      api_token: "{{ config['api_key'] }}"
    request_body_json: {}
  incremental_sync:
    type: DatetimeBasedCursor
    cursor_field: created_at
    lookback_window: P{{ config.get('lookback_window_days', 0) }}D
    cursor_datetime_formats:
      - "%Y-%m-%d %H:%M:%S.%f+00:00"
    datetime_format: "%Y-%m-%dT%H:%M:%S+00:00"
    start_datetime:
      type: MinMaxDatetime
      datetime: "{{ config['start_date'] }}"
      datetime_format: "%Y-%m-%dT%H:%M:%SZ"
    start_time_option:
      type: RequestOption
      field_name: created_at[gte]
      inject_into: request_parameter
    end_datetime:
      type: MinMaxDatetime
      datetime: "{{ config['end_date'] if config['end_date'] else now_utc().strftime('%Y-%m-%dT%H:%M:%SZ') }}"
      datetime_format: "%Y-%m-%dT%H:%M:%SZ"
    end_time_option:
      type: RequestOption
      field_name: created_at[lte]
      inject_into: request_parameter
  customers_stream:
    type: DeclarativeStream
    name: customers
    primary_key: id
    retriever:
      type: SimpleRetriever
      requester:
        $ref: "#/definitions/requester"
        path: customers
        request_parameters: {}
      record_selector:
        $ref: "#/definitions/selector"
      paginator:
        $ref: "#/definitions/paginator"
    incremental_sync:
      $ref: "#/definitions/incremental_sync"
  subscriptions_stream:
    type: DeclarativeStream
    name: subscriptions
    primary_key: id
    retriever:
      type: SimpleRetriever
      requester:
        $ref: "#/definitions/requester"
        path: subscriptions
        request_parameters: {}
      record_selector:
        $ref: "#/definitions/selector"
      paginator:
        $ref: "#/definitions/paginator"
    transformations:
      - type: AddFields
        fields:
          - path:
              - customer_id
            value: "{{ record['customer']['id'] }}"
      - type: AddFields
        fields:
          - path:
              - external_customer_id
            value: "{{ record['customer']['external_customer_id'] }}"
      - type: RemoveFields
        field_pointers:
          - - customer
      - type: AddFields
        fields:
          - path:
              - plan_id
            value: "{{ record['plan']['id'] }}"
      - type: RemoveFields
        field_pointers:
          - - plan
    incremental_sync:
      $ref: "#/definitions/incremental_sync"
  plans_stream:
    type: DeclarativeStream
    name: plans
    primary_key: id
    retriever:
      type: SimpleRetriever
      requester:
        $ref: "#/definitions/requester"
        path: plans
        request_parameters: {}
      record_selector:
        $ref: "#/definitions/selector"
      paginator:
        $ref: "#/definitions/paginator"
    incremental_sync:
      $ref: "#/definitions/incremental_sync"
  invoices_stream:
    type: DeclarativeStream
    name: invoices
    primary_key: id
    retriever:
      type: SimpleRetriever
      requester:
        $ref: "#/definitions/requester"
        path: invoices
      record_selector:
        $ref: "#/definitions/selector"
      paginator:
        $ref: "#/definitions/paginator"
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: invoice_date
      lookback_window: P{{ config.get('lookback_window_days', 0) }}D
      cursor_datetime_formats:
        - "%Y-%m-%dT%H:%M:%S+00:00"
      datetime_format: "%Y-%m-%dT%H:%M:%S+00:00"
      start_datetime:
        type: MinMaxDatetime
        datetime: "{{ config['start_date'] }}"
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      start_time_option:
        type: RequestOption
        field_name: invoice_date[gte]
        inject_into: request_parameter
    partition_router:
      - type: ListPartitionRouter
        values:
          - void
          - paid
          - issued
          - synced
        cursor_field: status
        request_option:
          type: RequestOption
          inject_into: request_parameter
          field_name: status[]
  credits_ledger_entries_stream:
    type: DeclarativeStream
    name: credits_ledger_entries
    primary_key: id
    retriever:
      type: SimpleRetriever
      requester:
        $ref: "#/definitions/requester"
        path: customers/{{ stream_partition.customer_id }}/credits/ledger
        request_parameters:
          entry_status: committed
      record_selector:
        $ref: "#/definitions/selector"
      paginator:
        $ref: "#/definitions/paginator"
      partition_router:
        - type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: customer_id
              stream:
                $ref: "#/definitions/customers_stream"
    transformations:
      - type: AddFields
        fields:
          - path:
              - customer_id
            value: "{{ record['customer']['id'] }}"
      - type: RemoveFields
        field_pointers:
          - - customer
      - type: AddFields
        fields:
          - path:
              - block_expiry_date
            value: "{{ record['credit_block']['expiry_date'] }}"
      - type: AddFields
        fields:
          - path:
              - credit_block_id
            value: "{{ record['credit_block']['id'] }}"
      - type: AddFields
        fields:
          - path:
              - credit_block_per_unit_cost_basis
            value: "{{ record['credit_block']['per_unit_cost_basis'] }}"
      - type: RemoveFields
        field_pointers:
          - - credit_block
      - type: AddFields
        fields:
          - path:
              - event
              - id
            value: "{{ record['event_id'] }}"
      - type: RemoveFields
        field_pointers:
          - - event_id
    incremental_sync:
      $ref: "#/definitions/incremental_sync"
  subscription_usage_stream:
    type: DeclarativeStream
    name: subscription_usage
    primary_key:
      - subscription_id
      - billable_metric_id
      - timeframe_start
      - grouping_key
    retriever:
      type: SimpleRetriever
      requester:
        $ref: "#/definitions/requester"
        path: subscriptions/{{ stream_partition.subscription_id }}/usage
        request_parameters:
          group_by: "{{ config.get('subscription_usage_grouping_key', '') }}"
          granularity: day
          billable_metric_id: "{{ stream_partition.billable_metric_id }}"
      record_selector:
        $ref: "#/definitions/selector"
      partition_router:
        - type: CustomPartitionRouter
          class_name: source_orb.components.SubscriptionUsagePartitionRouter
          plans_stream:
            $ref: "#/definitions/plans_stream"
          subscriptions_stream:
            $ref: "#/definitions/subscriptions_stream"
    transformations:
      - type: RemoveFields
        field_pointers:
          - - usage
      - type: CustomTransformation
        class_name: source_orb.components.SubscriptionUsageTransformation
        subscription_id: "{{ stream_partition.subscription_id }}"
      - type: AddFields
        fields:
          - path:
              - grouping_key
            value: "{{ config.get('subscription_usage_grouping_key', '') }}"
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: timeframe_start
      lookback_window: P{{ config.get('lookback_window_days', 0) }}D
      cursor_datetime_formats:
        - "%Y-%m-%dT%H:%M:%S.%f%z"
      datetime_format: "%Y-%m-%dT%H:%M:%S.%f%z"
      start_datetime:
        type: MinMaxDatetime
        datetime: "{{ config['start_date'] }}"
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"
      start_time_option:
        type: RequestOption
        field_name: timeframe_start
        inject_into: request_parameter
      end_time_option:
        type: RequestOption
        field_name: timeframe_end
        inject_into: request_parameter
      end_datetime:
        type: MinMaxDatetime
        datetime: "{{ now_utc().strftime('%Y-%m-%dT%H:%M:%SZ') }}"
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"

streams:
  - "#/definitions/subscriptions_stream"
  - "#/definitions/customers_stream"
  - "#/definitions/subscription_usage_stream"
  - "#/definitions/plans_stream"
  - "#/definitions/invoices_stream"
  - "#/definitions/credits_ledger_entries_stream"

spec:
  type: Spec
  documentation_url: https://docs.withorb.com/
  connection_specification:
    $schema: http://json-schema.org/draft-07/schema#
    type: object
    additionalProperties: true
    required:
      - start_date
      - api_key
    properties:
      api_key:
        type: string
        title: Orb API Key
        description: Orb API Key, issued from the Orb admin console.
        airbyte_secret: true
        order: 0
      start_date:
        type: string
        title: Start Date
        format: date-time
        pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$
        description: UTC date and time in the format 2022-03-01T00:00:00Z. Any data with created_at before this data will not be synced. For Subscription Usage, this becomes the `timeframe_start` API parameter.
        examples:
          - "2022-03-01T00:00:00Z"
        order: 1
      end_date:
        type: string
        title: End Date
        pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$
        description: UTC date and time in the format 2022-03-01T00:00:00Z. Any data with created_at after this data will not be synced. For Subscription Usage, this becomes the `timeframe_start` API parameter.
        examples: ["2024-03-01T00:00:00Z"]
        order: 2    
      lookback_window_days:
        type: integer
        title: Lookback Window (in days)
        default: 0
        minimum: 0
        description: When set to N, the connector will always refresh resources created within the past N days. By default, updated objects that are not newly created are not incrementally synced.
        order: 3
      string_event_properties_keys:
        type: array
        items:
          type: string
        title: Event properties keys (string values)
        description: Property key names to extract from all events, in order to enrich ledger entries corresponding to an event deduction.
        order: 4
      numeric_event_properties_keys:
        type: array
        items:
          type: string
        title: Event properties keys (numeric values)
        description: Property key names to extract from all events, in order to enrich ledger entries corresponding to an event deduction.
        order: 5
      subscription_usage_grouping_key:
        type: string
        title: Subscription usage grouping key (string value)
        description: Property key name to group subscription usage by.
        order: 6
      plan_id:
        type: string
        title: Orb Plan ID for Subscription Usage (string value)
        description: Orb Plan ID to filter subscriptions that should have usage fetched.
        order: 7
